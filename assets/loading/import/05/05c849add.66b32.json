[1,["b6ZMYc4sdDAbm35FRl3Cjm@6c48a","24pwTaKGdEbY0aXpIMdeCd@6c48a","1cAgNLnCVI764dsp3JDh9c","9f2QDdIhtPiY8s+6NCQ8g1@6c48a","3f0Kt9I05N3YEQTzaagHvV","fcQ5gc19VEHb9dVQaYSskA@f9941","9f2QDdIhtPiY8s+6NCQ8g1@f9941","0blk6GKx9DQbgLQWPxyVF8","24pwTaKGdEbY0aXpIMdeCd@f9941","fcQ5gc19VEHb9dVQaYSskA@6c48a"],["node","_textureSource","_spriteFrame","_effectAsset","root","lbl_progress","lbl_hint","pb","data","_customMaterial","_skeletonData"],["cc.SpriteFrame",["cc.Sprite",["_type","_sizeMode","node","__prefab","_spriteFrame","_customMaterial"],1,1,4,6,6],["cc.Node",["_name","_layer","_components","_prefab","_children","_parent"],1,9,4,2,1],["cc.Node",["_name","_layer","_active","_parent","_components","_prefab","_children","_lpos"],0,1,12,4,2,5],["cc.UITransform",["node","__prefab","_contentSize","_anchorPoint"],3,1,4,5,5],["sp.SkeletonData",["_name","_atlasText","textureNames","_skeletonJson","textures"],-1,3],["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.Material",["_name","_props","_states","_defines"],-1],["cc.Prefab",["_name"],2],["cc.CompPrefabInfo",["fileId"],2],["cc.Widget",["_alignFlags","_originalWidth","_originalHeight","node","__prefab"],0,1,4],["b15a4KzI+5HBrpz0Q6Q/Idn",["node","__prefab","pb","lbl_hint","lbl_progress"],3,1,4,1,1,1],["cc.PrefabInfo",["fileId","instance","targetOverrides","nestedPrefabInstanceRoots","root","asset"],-1,1,1],["sp.Skeleton",["_preCacheMode","_premultipliedAlpha","defaultSkin","defaultAnimation","node","__prefab","_skeletonData"],-1,1,4,6],["cc.Label",["_actualFontSize","_fontSize","node","__prefab"],1,1,4],["cc.ProgressBar",["_totalLength","_progress","node","__prefab","_barSprite"],1,1,4,1]],[[9,0,2],[12,0,1,2,3,4,5,5],[4,0,1,2,1],[3,0,1,3,4,5,7,3],[2,0,1,5,2,3,3],[14,0,1,2,3,3],[5,0,1,2,3,4,5],[6,0,1,2,4],[7,0,1,2,3,5],[8,0,2],[2,0,1,4,2,3,3],[3,0,2,1,3,6,4,5,4],[4,0,1,2,3,1],[10,0,1,2,3,4,4],[11,0,1,2,3,4,1],[1,0,1,2,3,4,3],[1,2,3,5,4,1],[1,0,1,2,3,3],[13,0,1,2,3,4,5,6,5],[15,0,1,2,3,4,3]],[[[[6,"loading","\r\nloading.png\r\nsize: 1238,137\r\nformat: RGBA8888\r\nfilter: Linear,Linear\r\nrepeat: none\r\nLoading2_1\r\n  rotate: true\r\n  xy: 743, 3\r\n  size: 22, 49\r\n  orig: 128, 128\r\n  offset: 53, 40\r\n  index: -1\r\nLoading2_10\r\n  rotate: false\r\n  xy: 200, 2\r\n  size: 66, 65\r\n  orig: 128, 128\r\n  offset: 31, 32\r\n  index: -1\r\nLoading2_11\r\n  rotate: false\r\n  xy: 268, 2\r\n  size: 66, 65\r\n  orig: 128, 128\r\n  offset: 31, 32\r\n  index: -1\r\nLoading2_12\r\n  rotate: false\r\n  xy: 336, 2\r\n  size: 66, 65\r\n  orig: 128, 128\r\n  offset: 31, 32\r\n  index: -1\r\nLoading2_13\r\n  rotate: false\r\n  xy: 404, 2\r\n  size: 66, 65\r\n  orig: 128, 128\r\n  offset: 31, 32\r\n  index: -1\r\nLoading2_14\r\n  rotate: false\r\n  xy: 472, 2\r\n  size: 66, 65\r\n  orig: 128, 128\r\n  offset: 31, 32\r\n  index: -1\r\nLoading2_15\r\n  rotate: false\r\n  xy: 540, 2\r\n  size: 66, 65\r\n  orig: 128, 128\r\n  offset: 31, 32\r\n  index: -1\r\nLoading2_16\r\n  rotate: true\r\n  xy: 913, 69\r\n  size: 66, 68\r\n  orig: 128, 128\r\n  offset: 31, 30\r\n  index: -1\r\nLoading2_17\r\n  rotate: true\r\n  xy: 132, 69\r\n  size: 66, 69\r\n  orig: 128, 128\r\n  offset: 31, 30\r\n  index: -1\r\nLoading2_18\r\n  rotate: true\r\n  xy: 203, 69\r\n  size: 66, 69\r\n  orig: 128, 128\r\n  offset: 31, 30\r\n  index: -1\r\nLoading2_19\r\n  rotate: true\r\n  xy: 274, 69\r\n  size: 66, 69\r\n  orig: 128, 128\r\n  offset: 31, 30\r\n  index: -1\r\nLoading2_2\r\n  rotate: true\r\n  xy: 743, 27\r\n  size: 40, 58\r\n  orig: 128, 128\r\n  offset: 44, 35\r\n  index: -1\r\nLoading2_20\r\n  rotate: true\r\n  xy: 345, 69\r\n  size: 66, 69\r\n  orig: 128, 128\r\n  offset: 31, 30\r\n  index: -1\r\nLoading2_21\r\n  rotate: true\r\n  xy: 416, 69\r\n  size: 66, 69\r\n  orig: 128, 128\r\n  offset: 31, 30\r\n  index: -1\r\nLoading2_22\r\n  rotate: true\r\n  xy: 487, 69\r\n  size: 66, 69\r\n  orig: 128, 128\r\n  offset: 31, 30\r\n  index: -1\r\nLoading2_23\r\n  rotate: true\r\n  xy: 558, 69\r\n  size: 66, 69\r\n  orig: 128, 128\r\n  offset: 31, 30\r\n  index: -1\r\nLoading2_24\r\n  rotate: true\r\n  xy: 629, 69\r\n  size: 66, 69\r\n  orig: 128, 128\r\n  offset: 31, 30\r\n  index: -1\r\nLoading2_25\r\n  rotate: true\r\n  xy: 700, 69\r\n  size: 66, 69\r\n  orig: 128, 128\r\n  offset: 31, 30\r\n  index: -1\r\nLoading2_26\r\n  rotate: true\r\n  xy: 771, 69\r\n  size: 66, 69\r\n  orig: 128, 128\r\n  offset: 31, 30\r\n  index: -1\r\nLoading2_27\r\n  rotate: true\r\n  xy: 842, 69\r\n  size: 66, 69\r\n  orig: 128, 128\r\n  offset: 31, 30\r\n  index: -1\r\nLoading2_28\r\n  rotate: true\r\n  xy: 983, 70\r\n  size: 65, 67\r\n  orig: 128, 128\r\n  offset: 32, 31\r\n  index: -1\r\nLoading2_29\r\n  rotate: false\r\n  xy: 676, 10\r\n  size: 65, 57\r\n  orig: 128, 128\r\n  offset: 32, 36\r\n  index: -1\r\nLoading2_3\r\n  rotate: false\r\n  xy: 1052, 70\r\n  size: 66, 65\r\n  orig: 128, 128\r\n  offset: 31, 32\r\n  index: -1\r\nLoading2_30\r\n  rotate: true\r\n  xy: 1187, 70\r\n  size: 65, 49\r\n  orig: 128, 128\r\n  offset: 32, 40\r\n  index: -1\r\nLoading2_31\r\n  rotate: true\r\n  xy: 1187, 3\r\n  size: 65, 38\r\n  orig: 128, 128\r\n  offset: 32, 45\r\n  index: -1\r\nLoading2_32\r\n  rotate: false\r\n  xy: 803, 37\r\n  size: 65, 30\r\n  orig: 128, 128\r\n  offset: 32, 49\r\n  index: -1\r\nLoading2_33\r\n  rotate: false\r\n  xy: 870, 37\r\n  size: 65, 30\r\n  orig: 128, 128\r\n  offset: 32, 49\r\n  index: -1\r\nLoading2_34\r\n  rotate: true\r\n  xy: 937, 2\r\n  size: 65, 30\r\n  orig: 128, 128\r\n  offset: 32, 49\r\n  index: -1\r\nLoading2_35\r\n  rotate: false\r\n  xy: 803, 5\r\n  size: 65, 30\r\n  orig: 128, 128\r\n  offset: 32, 49\r\n  index: -1\r\nLoading2_4\r\n  rotate: true\r\n  xy: 1120, 69\r\n  size: 66, 65\r\n  orig: 128, 128\r\n  offset: 31, 32\r\n  index: -1\r\nLoading2_5\r\n  rotate: false\r\n  xy: 983, 3\r\n  size: 66, 65\r\n  orig: 128, 128\r\n  offset: 31, 32\r\n  index: -1\r\nLoading2_6\r\n  rotate: true\r\n  xy: 1051, 2\r\n  size: 66, 65\r\n  orig: 128, 128\r\n  offset: 31, 32\r\n  index: -1\r\nLoading2_7\r\n  rotate: false\r\n  xy: 1118, 2\r\n  size: 66, 65\r\n  orig: 128, 128\r\n  offset: 31, 32\r\n  index: -1\r\nLoading2_8\r\n  rotate: false\r\n  xy: 132, 2\r\n  size: 66, 65\r\n  orig: 128, 128\r\n  offset: 31, 32\r\n  index: -1\r\nLoading2_9\r\n  rotate: false\r\n  xy: 608, 2\r\n  size: 66, 65\r\n  orig: 128, 128\r\n  offset: 31, 32\r\n  index: -1\r\nLoading_heidi\r\n  rotate: false\r\n  xy: 2, 7\r\n  size: 128, 128\r\n  orig: 128, 128\r\n  offset: 0, 0\r\n  index: -1\r\n",["loading.png"],{"skeleton":{"hash":"hkTZ+aP92oF6AahQ/Nva7jc1FSQ","spine":"3.8.97","x":-64,"y":-64,"width":128,"height":128,"images":"","audio":""},"bones":[{"name":"root"}],"slots":[{"name":"Loading_heidi","bone":"root","attachment":"Loading_heidi"},{"name":"Loading2_1","bone":"root","attachment":"Loading2_1"}],"skins":[{"name":"default","attachments":{"Loading2_1":{"Loading2_1":{"width":128,"height":128},"Loading2_2":{"width":128,"height":128},"Loading2_3":{"width":128,"height":128},"Loading2_4":{"width":128,"height":128},"Loading2_5":{"width":128,"height":128},"Loading2_6":{"width":128,"height":128},"Loading2_7":{"width":128,"height":128},"Loading2_8":{"width":128,"height":128},"Loading2_9":{"width":128,"height":128},"Loading2_10":{"width":128,"height":128},"Loading2_11":{"width":128,"height":128},"Loading2_12":{"width":128,"height":128},"Loading2_13":{"width":128,"height":128},"Loading2_14":{"width":128,"height":128},"Loading2_15":{"width":128,"height":128},"Loading2_16":{"width":128,"height":128},"Loading2_17":{"width":128,"height":128},"Loading2_18":{"width":128,"height":128},"Loading2_19":{"width":128,"height":128},"Loading2_20":{"width":128,"height":128},"Loading2_21":{"width":128,"height":128},"Loading2_22":{"width":128,"height":128},"Loading2_23":{"width":128,"height":128},"Loading2_24":{"width":128,"height":128},"Loading2_25":{"width":128,"height":128},"Loading2_26":{"width":128,"height":128},"Loading2_27":{"width":128,"height":128},"Loading2_28":{"width":128,"height":128},"Loading2_29":{"width":128,"height":128},"Loading2_30":{"width":128,"height":128},"Loading2_31":{"width":128,"height":128},"Loading2_32":{"width":128,"height":128},"Loading2_33":{"width":128,"height":128},"Loading2_34":{"width":128,"height":128},"Loading2_35":{"width":128,"height":128}},"Loading_heidi":{"Loading_heidi":{"width":128,"height":128}}}}],"animations":{"act_1":{"slots":{"Loading2_1":{"attachment":[{"time":0.0667,"name":"Loading2_2"},{"time":0.1333,"name":"Loading2_3"},{"time":0.2,"name":"Loading2_4"},{"time":0.2667,"name":"Loading2_5"},{"time":0.3333,"name":"Loading2_6"},{"time":0.4,"name":"Loading2_7"},{"time":0.4667,"name":"Loading2_8"},{"time":0.5333,"name":"Loading2_9"},{"time":0.6,"name":"Loading2_10"},{"time":0.6667,"name":"Loading2_11"},{"time":0.7333,"name":"Loading2_12"},{"time":0.8,"name":"Loading2_13"},{"time":0.8667,"name":"Loading2_14"},{"time":0.9333,"name":"Loading2_15"},{"time":1,"name":"Loading2_16"},{"time":1.0667,"name":"Loading2_17"},{"time":1.1333,"name":"Loading2_18"},{"time":1.2,"name":"Loading2_19"},{"time":3,"name":"Loading2_20"},{"time":3.0667,"name":"Loading2_21"},{"time":3.1333,"name":"Loading2_22"},{"time":3.2,"name":"Loading2_23"},{"time":3.2667,"name":"Loading2_24"},{"time":3.3333,"name":"Loading2_25"},{"time":3.4,"name":"Loading2_26"},{"time":3.4667,"name":"Loading2_27"},{"time":3.5333,"name":"Loading2_28"},{"time":3.6,"name":"Loading2_29"},{"time":3.6667,"name":"Loading2_30"},{"time":3.7333,"name":"Loading2_31"},{"time":3.8,"name":"Loading2_32"},{"time":3.8667,"name":"Loading2_33"},{"time":3.9333,"name":"Loading2_34"},{"time":4,"name":"Loading2_35"},{"time":4.0667,"name":null},{"time":4.6667,"name":null}]}}}}},[0]]],0,0,[0],[-1],[0]],[[[7,"../stage/loading/mainUI/effect/eff_uv_scroll",[{"hash":3294188845,"name":"../stage/loading/mainUI/effect/eff_uv_scroll|sprite-vs:vert|sprite-fs:frag","blocks":[{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"ARGS","stageFlags":16,"binding":1,"members":[{"name":"moveSpeed","type":13,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":21,"location":1,"defines":[]},{"name":"a_color","format":44,"location":2,"defines":[]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[{"name":"CCLocal","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_matWorld","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matWorldIT","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_lightingMapUVParam","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_localShadowBias","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData2","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","typename":"sampler2D","type":28,"count":1,"stageFlags":16,"tags":{"builtin":"local"},"defines":["USE_TEXTURE"]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"ARGS","stageFlags":16,"binding":1,"members":[{"name":"moveSpeed","type":13,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#if USE_LOCAL\n  layout(std140) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n    highp vec4 cc_localShadowBias;\n    highp vec4 cc_reflectionProbeData1;\n    highp vec4 cc_reflectionProbeData2;\n  };\n#endif\n#if SAMPLE_FROM_RT\n  #define QUATER_PI         0.78539816340\n  #define HALF_PI           1.57079632679\n  #define PI                3.14159265359\n  #define PI2               6.28318530718\n  #define PI4               12.5663706144\n  #define INV_QUATER_PI     1.27323954474\n  #define INV_HALF_PI       0.63661977237\n  #define INV_PI            0.31830988618\n  #define INV_PI2           0.15915494309\n  #define INV_PI4           0.07957747155\n  #define EPSILON           1e-6\n  #define EPSILON_LOWP      1e-4\n  #define LOG2              1.442695\n  #define EXP_VALUE         2.71828183f\n  #define FP_MAX            65504.0\n  #define FP_SCALE          0.0009765625\n  #define FP_SCALE_INV      1024.0\n  #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n      #define LIGHT_MAP_TYPE_DISABLED 0\n  #define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n  #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n  #define REFLECTION_PROBE_TYPE_NONE 0\n  #define REFLECTION_PROBE_TYPE_CUBE 1\n  #define REFLECTION_PROBE_TYPE_PLANAR 2\n  #define LIGHT_TYPE_DIRECTIONAL 0.0\n  #define LIGHT_TYPE_POINT 1.0\n  #define LIGHT_TYPE_SPOT 2.0\n  #define LIGHT_TYPE_SPHERE 3.0\n  #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n  #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n  #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n  #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n  #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n  #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n#endif\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 color;\nout vec2 uv0;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  #if USE_PIXEL_ALIGNMENT\n    pos = cc_matView * pos;\n    pos.xyz = floor(pos.xyz);\n    pos = cc_matProj * pos;\n  #else\n    pos = cc_matViewProj * pos;\n  #endif\n  uv0 = a_texCoord;\n  #if SAMPLE_FROM_RT\n    uv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n  #endif\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\n  return vec4(texture(tex, uv).rgb, texture(tex, uv + vec2(0.0, 0.5)).r);\n#else\n  return texture(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\n  layout(std140) uniform ALPHA_TEST_DATA {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(std140) uniform ARGS{\n  float moveSpeed;\n};\nin vec4 color;\n#if USE_TEXTURE\n  in vec2 uv0;\n  uniform sampler2D cc_spriteTexture;\n#endif\nvec4 frag () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n    o *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0 + vec2(cc_time.x * -moveSpeed,0));\n    #if IS_GRAY\n      float gray  = 0.2126 * o.r + 0.7152 * o.g + 0.0722 * o.b;\n      o.r = o.g = o.b = gray;\n    #endif\n  #endif\n  o *= color;\n  ALPHA_TEST(o);\n  return o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matProj;\n  uniform highp mat4 cc_matViewProj;\n  uniform highp vec4 cc_cameraPos;\n#if USE_LOCAL\n  uniform highp mat4 cc_matWorld;\n#endif\n#if SAMPLE_FROM_RT\n  #define QUATER_PI         0.78539816340\n  #define HALF_PI           1.57079632679\n  #define PI                3.14159265359\n  #define PI2               6.28318530718\n  #define PI4               12.5663706144\n  #define INV_QUATER_PI     1.27323954474\n  #define INV_HALF_PI       0.63661977237\n  #define INV_PI            0.31830988618\n  #define INV_PI2           0.15915494309\n  #define INV_PI4           0.07957747155\n  #define EPSILON           1e-6\n  #define EPSILON_LOWP      1e-4\n  #define LOG2              1.442695\n  #define EXP_VALUE         2.71828183f\n  #define FP_MAX            65504.0\n  #define FP_SCALE          0.0009765625\n  #define FP_SCALE_INV      1024.0\n  #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n      #define LIGHT_MAP_TYPE_DISABLED 0\n  #define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n  #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n  #define REFLECTION_PROBE_TYPE_NONE 0\n  #define REFLECTION_PROBE_TYPE_CUBE 1\n  #define REFLECTION_PROBE_TYPE_PLANAR 2\n  #define LIGHT_TYPE_DIRECTIONAL 0.0\n  #define LIGHT_TYPE_POINT 1.0\n  #define LIGHT_TYPE_SPOT 2.0\n  #define LIGHT_TYPE_SPHERE 3.0\n  #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n  #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n  #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n  #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n  #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n  #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n#endif\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 color;\nvarying vec2 uv0;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  #if USE_PIXEL_ALIGNMENT\n    pos = cc_matView * pos;\n    pos.xyz = floor(pos.xyz);\n    pos = cc_matProj * pos;\n  #else\n    pos = cc_matViewProj * pos;\n  #endif\n  uv0 = a_texCoord;\n  #if SAMPLE_FROM_RT\n    uv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n  #endif\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\n  return vec4(texture2D(tex, uv).rgb, texture2D(tex, uv + vec2(0.0, 0.5)).r);\n#else\n  return texture2D(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\n      uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\nuniform highp vec4 cc_time;\nuniform float moveSpeed;\nvarying vec4 color;\n#if USE_TEXTURE\n  varying vec2 uv0;\n  uniform sampler2D cc_spriteTexture;\n#endif\nvec4 frag () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n    o *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0 + vec2(cc_time.x * -moveSpeed,0));\n    #if IS_GRAY\n      float gray  = 0.2126 * o.r + 0.7152 * o.g + 0.0722 * o.b;\n      o.r = o.g = o.b = gray;\n    #endif\n  #endif\n  o *= color;\n  ALPHA_TEST(o);\n  return o;\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","defines":["USE_TEXTURE"]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":54,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":44}},"defines":[{"name":"USE_LOCAL","type":"boolean"},{"name":"SAMPLE_FROM_RT","type":"boolean"},{"name":"USE_PIXEL_ALIGNMENT","type":"boolean"},{"name":"CC_USE_EMBEDDED_ALPHA","type":"boolean"},{"name":"USE_ALPHA_TEST","type":"boolean"},{"name":"USE_TEXTURE","type":"boolean"},{"name":"IS_GRAY","type":"boolean"}]}],[{"passes":[{"program":"../stage/loading/mainUI/effect/eff_uv_scroll|sprite-vs:vert|sprite-fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendDstAlpha":4}]},"rasterizerState":{"cullMode":0},"depthStencilState":{"depthTest":false,"depthWrite":false},"properties":{"alphaThreshold":{"type":13,"value":[0.5]},"moveSpeed":{"type":13,"value":[0.2]}}}]}]]],0,0,[],[],[]],[[{"name":"default_progressbar","rect":{"x":0,"y":0,"width":30,"height":15},"offset":{"x":0,"y":0},"originalSize":{"width":30,"height":15},"rotated":false,"capInsets":[10,4,10,4],"vertices":{"rawPosition":[-15,-7.5,0,15,-7.5,0,-15,7.5,0,15,7.5,0],"indexes":[0,1,2,2,1,3],"uv":[0,15,30,15,0,0,30,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-15,"y":-7.5,"z":0},"maxPos":{"x":15,"y":7.5,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[1],[1]],[[[8,"mat_uv_scroll",[{"moveSpeed":0.02}],[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_TEXTURE":true}]]],0,0,[0],[3],[2]],[[{"name":"default_progressbar_bg","rect":{"x":0,"y":0,"width":60,"height":15},"offset":{"x":0,"y":0},"originalSize":{"width":60,"height":15},"rotated":false,"capInsets":[10,4,10,4],"vertices":{"rawPosition":[-30,-7.5,0,30,-7.5,0,-30,7.5,0,30,7.5,0],"indexes":[0,1,2,2,1,3],"uv":[0,15,60,15,0,0,60,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-30,"y":-7.5,"z":0},"maxPos":{"x":30,"y":7.5,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[1],[3]],[[[9,"loadingMainUI"],[10,"loadingMainUI",33554432,[-8,-9,-10,-11,-12],[[2,-2,[0,"44HBhchb1D/p2v8zk523N4"],[5,1334,750]],[13,45,100,100,-3,[0,"96gAZBFe9M34Xd4jvVfb37"]],[14,-7,[0,"aeb1eMnsxKBai2KUh92MWY"],-6,-5,-4]],[1,"c46/YsCPVOJYA4mWEpNYRx",null,null,null,-1,0]],[11,"ProgressBar",false,33554432,1,[-16],[[[2,-13,[0,"87l3ob6dZBuZxPW2mGXCWD"],[5,300,15]],[15,1,0,-14,[0,"77J/UDx99DdZc4Ciw1W2IN"],2],-15],4,4,1],[1,"2bAPwLwopETK3vPOBXzi5Y",null,null,null,1,0]],[4,"bg_xingkong",33554432,1,[[2,-17,[0,"b3mksBHM5J4b77Uw3GdBWs"],[5,1408,453]],[16,-18,[0,"ad+zhIKb5Pw4QhPUQ64Vu9"],0,1]],[1,"77qNF7pyFMwKpxkwcvmJBX",null,null,null,1,0]],[3,"lbl_hint",33554432,1,[[[2,-19,[0,"50r6IaSXZDeqb4h+dZs36/"],[5,42.26,50.4]],-20],4,1],[1,"1fR687lNVL46tgBmZgS6nv",null,null,null,1,0],[1,0,79.236,0]],[3,"Bar",33554432,2,[[[12,-21,[0,"73LwYFhOBPsq3SSNZFlpnM"],[5,150,15],[0,0,0.5]],-22],4,1],[1,"15LCOMbq5JCqEw7Cq6ydQL",null,null,null,1,0],[1,-150,0,0]],[3,"lbl_progress",33554432,1,[[[2,-23,[0,"77I/wILq5I2Zm/BK0C++iU"],[5,42.26,50.4]],-24],4,1],[1,"d7RvVp8pBE4ra2tBns5sj8",null,null,null,1,0],[1,0,-75.173,0]],[4,"loading",33554432,1,[[2,-25,[0,"f7n3AFHVZJFLyNU4cO21BH"],[5,128,128]],[18,0,false,"default","act_1",-26,[0,"c1VTrrB0JEh6oZfRUBZYZw"],3]],[1,"75adT3Vt9H3KY4QMbnR11F",null,null,null,1,0]],[5,20,20,4,[0,"1c48SrKclGVoAyw0lxCq+h"]],[17,1,0,5,[0,"a27m/WZixELLLCCagxX2ye"]],[19,300,0.5,2,[0,"c18c9UYztKTLS8nMIe3Xqg"],9],[5,20,20,6,[0,"e6sha6SBpA1JygowksU7Js"]]],0,[0,4,1,0,0,1,0,0,1,0,5,11,0,6,8,0,7,10,0,0,1,0,-1,3,0,-2,4,0,-3,2,0,-4,6,0,-5,7,0,0,2,0,0,2,0,-3,10,0,-1,5,0,0,3,0,0,3,0,0,4,0,-2,8,0,0,5,0,-2,9,0,0,6,0,-2,11,0,0,7,0,0,7,0,8,1,26],[0,0,0,0,9],[9,2,2,10,2],[4,5,6,7,8]],[[{"name":"bg_xingkong","rect":{"x":0,"y":0,"width":1408,"height":453},"offset":{"x":0,"y":0},"originalSize":{"width":1408,"height":453},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-704,-226.5,0,704,-226.5,0,-704,226.5,0,704,226.5,0],"indexes":[0,1,2,2,1,3],"uv":[0,453,1408,453,0,0,1408,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-704,"y":-226.5,"z":0},"maxPos":{"x":704,"y":226.5,"z":0}},"packable":false,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[1],[9]]]]
