[1,0,0,[["cc.TextAsset",["_name","text"],1]],[[0,0,1,3]],[[[[0,"SpinResultsGameMode.d","/**\r\n * 游戏模式\r\n */\r\nexport declare enum SpinResultsGameMode {\r\n    /**\r\n     * 普通模式\r\n     */\r\n    Normal = 0,\r\n    /**\r\n     * freespin模式\r\n     */\r\n    FreeSpin = 1,\r\n    /**\r\n     * respin模式\r\n     */\r\n    Respin = 2,\r\n    /**\r\n     * bonus模式\r\n     */\r\n    Bonus = 3,\r\n    /**\r\n     * OneMore模式\r\n     */\r\n    OneMore = 4\r\n}\r\n"]],0,0,[],[],[]],[[[0,"SpinResultsEvent.d","export default class SpinResultsEvent {\r\n    private _code;\r\n    private _value;\r\n    constructor(code: number, value: number);\r\n    get code(): number;\r\n    set code(value: number);\r\n    get value(): number;\r\n    set value(value: number);\r\n}\r\n"]],0,0,[],[],[]],[[[0,"SpinResultsChess.d","export default class SpinResultsChess {\r\n    private _code;\r\n    private _assets;\r\n    private _position;\r\n    constructor(code?: number, assets?: number, position?: number);\r\n    /**\r\n     * 获取结果棋子编码\r\n     */\r\n    get code(): number;\r\n    /**\r\n     * 设置结果棋子编码\r\n     *\r\n     */\r\n    set code(value: number);\r\n    /**\r\n     * 获取棋子上的资产（比如金币数、freespin次数）\r\n     */\r\n    get assets(): number;\r\n    /**\r\n     * 设置棋子上的资产（比如金币数、freespin次数）\r\n     */\r\n    set assets(value: number);\r\n    /**\r\n     * 获取棋子位置\r\n     */\r\n    get position(): number;\r\n    /**\r\n     * 设置棋子位置\r\n     */\r\n    set position(value: number);\r\n}\r\n"]],0,0,[],[],[]],[[[0,"SpinResultsSymbolEvent.d","import { SpinResultsEvent } from \".\";\r\nexport default class SpinResultsSymbolEvent {\r\n    private _code;\r\n    private _assets;\r\n    private _postion;\r\n    private _events;\r\n    constructor(code: number, assets: number, position: number, events: SpinResultsEvent[]);\r\n    get code(): number;\r\n    get assets(): number;\r\n    get position(): number;\r\n    get events(): SpinResultsEvent[];\r\n}\r\n"]],0,0,[],[],[]],[[[0,"SpinResultsWinType.d","export declare enum SpinResultsWinType {\r\n    None = 0,\r\n    Normal = 1,\r\n    Big = 2,\r\n    Super = 3,\r\n    Mega = 4\r\n}\r\n"]],0,0,[],[],[]],[[[0,"SpinResultsCell.d","import SpinResultsSymbol from \"./SpinResultsSymbol\";\r\nimport SpinResultsWheel from \"./SpinResultsWheel\";\r\nimport SpinResultsEvent from \"./SpinResultsEvent\";\r\nexport default class SpinResultCell extends SpinResultsSymbol {\r\n    private _fixed;\r\n    private _mockCodes;\r\n    private _extraCode;\r\n    private _extraAssets;\r\n    private _extraPosition;\r\n    private _wheel;\r\n    private _events;\r\n    private _isHoldWin;\r\n    constructor(code?: number, fixed?: boolean, mockCodes?: number[], assets?: number, extraCode?: number, extraAssets?: number, extraPosition?: number, wheel?: SpinResultsWheel, events?: SpinResultsEvent[], isHoldWin?: boolean);\r\n    /**\r\n     * 获取棋子是否固定\r\n     */\r\n    get fixed(): boolean;\r\n    /**\r\n     * 设置棋子是否固定\r\n     */\r\n    set fixed(value: boolean);\r\n    /**\r\n     * 获取假冒棋子\r\n     */\r\n    get mockCodes(): number[];\r\n    /**\r\n     * 设置假冒棋子\r\n     */\r\n    set mockCodes(value: number[]);\r\n    /**\r\n     * 获取假冒棋子个数\r\n     */\r\n    get mockCodeCount(): number;\r\n    /**\r\n     * 获取额外棋子\r\n     */\r\n    get extraCode(): number;\r\n    /**\r\n     * 设置额外棋子\r\n     */\r\n    set extraCode(value: number);\r\n    /**\r\n     * 获取额外资产\r\n     */\r\n    get extraAssets(): number;\r\n    /**\r\n     * 设置额外资产\r\n     */\r\n    set extraAssets(value: number);\r\n    /**\r\n     * 获取额外棋子位置\r\n     */\r\n    get extraPosition(): number;\r\n    /**\r\n     * 设置额外棋子位置\r\n     */\r\n    set extraPosition(value: number);\r\n    /**\r\n     * 获取转盘\r\n     */\r\n    get wheel(): SpinResultsWheel;\r\n    /**\r\n     * 设置转盘\r\n     */\r\n    set wheel(value: SpinResultsWheel);\r\n    /**\r\n     * 获取事件\r\n     */\r\n    get events(): SpinResultsEvent[];\r\n    /**\r\n     * 设置事件\r\n     */\r\n    set events(value: SpinResultsEvent[]);\r\n    get isHoldWin(): boolean;\r\n    set isHoldWin(value: boolean);\r\n}\r\n"]],0,0,[],[],[]],[[[0,"SpinResultsGame.d","import { SpinResultsGameStatus } from \"./SpinResultsGameStatus\";\r\nexport default class SpinResultsGame {\r\n    private _id;\r\n    private _code;\r\n    private _isFree;\r\n    private _hasJackpot;\r\n    private _jackpot;\r\n    private _jackpot2;\r\n    private _status;\r\n    private _isTopGame;\r\n    private _isVertical;\r\n    private _orderNumber;\r\n    private _version;\r\n    constructor(_id: string, _code: string, _isFree: boolean, _hasJackpot: boolean, _jackpot: string, _jackpot2: string, _status: SpinResultsGameStatus, _isTopGame: boolean, _isVertical: boolean, _orderNumber: number, _version: string);\r\n    /**\r\n     * 关卡ID\r\n     *\r\n     * @readonly\r\n     * @type {string}\r\n     * @memberof SpinResultsGame\r\n     */\r\n    get id(): string;\r\n    set id(value: string);\r\n    /**\r\n     * 关卡代号\r\n     *\r\n     * @readonly\r\n     * @type {string}\r\n     * @memberof SpinResultsGame\r\n     */\r\n    get code(): string;\r\n    set code(value: string);\r\n    /**\r\n     * 奖池金额1\r\n     *\r\n     * @readonly\r\n     * @type {string}\r\n     * @memberof SpinResultsGame\r\n     */\r\n    get jackpot(): string;\r\n    set jackpot(value: string);\r\n    /**\r\n     * 奖池金额2\r\n     *\r\n     * @readonly\r\n     * @type {string}\r\n     * @memberof SpinResultsGame\r\n     */\r\n    get jackpot2(): string;\r\n    set jackpot2(value: string);\r\n    /**\r\n     * 是否有奖池\r\n     *\r\n     * @readonly\r\n     * @type {boolean}\r\n     * @memberof SpinResultsGame\r\n     */\r\n    get hasJackpot(): boolean;\r\n    set hasJackpot(value: boolean);\r\n    /**\r\n     * 是否免费\r\n     *\r\n     * @readonly\r\n     * @type {boolean}\r\n     * @memberof SpinResultsGame\r\n     */\r\n    get isFree(): boolean;\r\n    set isFree(value: boolean);\r\n    /**\r\n     * 是否免费\r\n     *\r\n     * @readonly\r\n     * @type {boolean}\r\n     * @memberof SpinResultsGame\r\n     */\r\n    get status(): SpinResultsGameStatus;\r\n    set status(value: SpinResultsGameStatus);\r\n    /**\r\n     * 是否置顶游戏\r\n     *\r\n     * @readonly\r\n     * @type {boolean}\r\n     * @memberof SpinResultsGame\r\n     */\r\n    get isTopGame(): boolean;\r\n    set isTopGame(value: boolean);\r\n    /**\r\n     * 是否竖屏\r\n     *\r\n     * @readonly\r\n     * @type {boolean}\r\n     * @memberof SpinResultsGame\r\n     */\r\n    get isVertical(): boolean;\r\n    set isVertical(value: boolean);\r\n    /**\r\n     * 关卡顺序，解锁等级\r\n     *\r\n     * @readonly\r\n     * @type {number}\r\n     * @memberof SpinResultsUpgrade\r\n     */\r\n    get orderNumber(): number;\r\n    set orderNumber(value: number);\r\n    /**\r\n     * 版本号\r\n     *\r\n     * @readonly\r\n     * @type {string}\r\n     * @memberof SpinResultsGame\r\n     */\r\n    get version(): string;\r\n    set version(value: string);\r\n}\r\n"]],0,0,[],[],[]],[[[0,"SpinResultsCollectible.d","export default class SpinResultsCollectible {\r\n    private _code;\r\n    private _value;\r\n    private _maxValue;\r\n    constructor(code?: number, value?: number, maxValue?: number);\r\n    /**\r\n     * 获取编码\r\n     */\r\n    get code(): number;\r\n    /**\r\n     * 设置编码\r\n     */\r\n    set code(value: number);\r\n    /**\r\n     * 获取当前值\r\n     */\r\n    get value(): number;\r\n    /**\r\n     * 设置当前值\r\n     */\r\n    set value(value: number);\r\n    /**\r\n     * 获取最大值\r\n     */\r\n    get maxValue(): number;\r\n    /**\r\n     * 设置最大值\r\n     */\r\n    set maxValue(value: number);\r\n}\r\n"]],0,0,[],[],[]],[[[0,"SpinResultsBigWinAdAwards.d","export default class SpinResultsBigWinAdAwards {\r\n    private _awardId;\r\n    private _points;\r\n    private _coins;\r\n    private _countdown;\r\n    constructor(_awardId: string, _points: number, _coins: number, _countdown: number);\r\n    /**\r\n     * 奖励ID\r\n     *\r\n     * @readonly\r\n     * @type {string}\r\n     * @memberof SpinResultsBigWinAdAwards\r\n     */\r\n    get awardId(): string;\r\n    set awardId(value: string);\r\n    /**\r\n     * 获得的游戏积分\r\n     *\r\n     * @readonly\r\n     * @type {number}\r\n     * @memberof SpinResultsUpgrade\r\n     */\r\n    get points(): number;\r\n    set points(value: number);\r\n    /**\r\n     * 奖励的金币\r\n     *\r\n     * @readonly\r\n     * @type {number}\r\n     * @memberof SpinResultsBigWinAdAwards\r\n     */\r\n    get coins(): number;\r\n    set coins(value: number);\r\n    /**\r\n     * 弹窗倒计时, 单位秒\r\n     *\r\n     * @readonly\r\n     * @type {number}\r\n     * @memberof SpinResultsBigWinAdAwards\r\n     */\r\n    get countdown(): number;\r\n    set countdown(value: number);\r\n}\r\n"]],0,0,[],[],[]],[[[0,"SpinResultsColumn.d","import SpinResultCell from \"./SpinResultsCell\";\r\nexport default class SpinResultsColumn {\r\n    private _cells;\r\n    private _codes;\r\n    private _stopCodes;\r\n    private _replaceCodes;\r\n    private _isHoldWin;\r\n    constructor(cells?: SpinResultCell[], isHoldWin?: boolean);\r\n    get cells(): SpinResultCell[];\r\n    set cells(value: SpinResultCell[]);\r\n    private getReplaceCodes;\r\n    get codes(): number[];\r\n    get isHoldWin(): boolean;\r\n    set isHoldWin(value: boolean);\r\n    get replaceCodes(): number[][];\r\n    get stopCodes(): number[];\r\n}\r\n"]],0,0,[],[],[]],[[[0,"SpinResultsFreeTrigger.d","import { SpinResultsGameMode } from \"./SpinResultsGameMode\";\r\nimport SpinResultsWheel from \"./SpinResultsWheel\";\r\nimport SpinResultChoice from \"./SpinResultChoice\";\r\n// import { SpinResultsEvent } from \".\";\r\nexport default class SpinResultsFreeTrigger {\r\n    private _gameMode;\r\n    private _count;\r\n    private _total;\r\n    private _wheels;\r\n    private _choices;\r\n    private _events;\r\n    constructor(gameMode?: SpinResultsGameMode, count?: number, total?: number, wheels?: SpinResultsWheel[], choices?: func[], events?: SpinResultsEvent[]);\r\n    /**\r\n     * 获取游戏类型\r\n     */\r\n    get gameMode(): SpinResultsGameMode;\r\n    /**\r\n     * 设置游戏类型\r\n     */\r\n    set gameMode(value: SpinResultsGameMode);\r\n    /**\r\n     * 获取次数\r\n     */\r\n    get count(): number;\r\n    /**\r\n     * 设置次数\r\n     */\r\n    set count(value: number);\r\n    /**\r\n     * 获取总次数\r\n     */\r\n    get total(): number;\r\n    /**\r\n     * 设置总次数\r\n     */\r\n    set total(value: number);\r\n    /**\r\n     * 获取转盘（比如小猪转棋盘数和wild列数）\r\n     */\r\n    get wheels(): SpinResultsWheel[];\r\n    /**\r\n     * 设置转盘\r\n     */\r\n    set wheels(value: SpinResultsWheel[]);\r\n    /**\r\n     * 获取选择（比如宙斯选择freespin次数）\r\n     */\r\n    get choices(): SpinResultChoice[];\r\n    /**\r\n     * 设置选择\r\n     */\r\n    set choices(value: SpinResultChoice[]);\r\n    /**\r\n     * 获取事件（比如埃及free spin转盘翻倍）\r\n     */\r\n    get events(): func[];\r\n    /**\r\n     * 设置事件\r\n     */\r\n    set events(value: func[]);\r\n}\r\n"]],0,0,[],[],[]],[[[0,"SpinResultsGameType.d","export declare enum SpinResultsGameType {\r\n    Normal = 0,\r\n    FreeSpin = 1,\r\n    Respin = 2,\r\n    Bonus = 3\r\n}\r\n"]],0,0,[],[],[]],[[[0,"SpinResultsConst.d","export default class SpinResultConst {\r\n    static NO_MOCK_CODE: number;\r\n}\r\n"]],0,0,[],[],[]],[[[0,"SpinResultMockChess.d","export default class SpinResultMockChess {\r\n    private _code;\r\n    private _assets;\r\n    constructor(code: number, assets?: number);\r\n    get code(): number;\r\n    set code(value: number);\r\n    get assets(): number;\r\n    set assets(value: number);\r\n}\r\n"]],0,0,[],[],[]],[[[0,"SpinResultsEventCode.d","export declare enum SpinResultsEventCode {\r\n    Free = 10000,\r\n    Bonus = 20000,\r\n    Respin = 30000,\r\n    OneMore = 40000\r\n}\r\n"]],0,0,[],[],[]],[[[0,"SpinResultsWheel.d","import SpinResultsWheelItem from \"./SpinResultsWheeItem\";\r\nexport default class SpinResultsWheel {\r\n    private _values;\r\n    private _finalValue;\r\n    private _finalPosition;\r\n    /**\r\n     * 构造函数\r\n     * @param values 值\r\n     * @param finalValue 最终值\r\n     */\r\n    constructor(values?: SpinResultsWheelItem[], finalValue?: SpinResultsWheelItem);\r\n    /**\r\n     * 获取转盘值\r\n     */\r\n    get values(): SpinResultsWheelItem[];\r\n    /**\r\n     * 设置转盘值\r\n     */\r\n    set values(value: SpinResultsWheelItem[]);\r\n    /**\r\n     * 获取最终值\r\n     */\r\n    get finalValue(): SpinResultsWheelItem;\r\n    /**\r\n     * 设置最终值\r\n     */\r\n    set finalValue(value: SpinResultsWheelItem);\r\n    /**\r\n     * 获取最终位置\r\n     */\r\n    get finalPosition(): number;\r\n}\r\n"]],0,0,[],[],[]],[[[0,"SpinResultsCellReward.d","export default class SpinResultsCellReward {\r\n    code: number;\r\n    position: number;\r\n    rewards: number;\r\n}\r\n"]],0,0,[],[],[]],[[[0,"SpinResultChoice.d","export default class SpinResultChoice {\r\n    private _questions;\r\n    private _answer;\r\n    constructor(questions?: number[]);\r\n    get questions(): number[];\r\n    set questions(value: number[]);\r\n    get answer(): number;\r\n    set answer(value: number);\r\n}\r\n"]],0,0,[],[],[]],[[[0,"SpinResultsGameWheel.d","import { SpinResultsWheel } from \"./SpinResultsWheel\";\r\nexport default class SpinResultsGameWheel {\r\n    private _winCoins;\r\n    private _totalCoins;\r\n    private _productId;\r\n    private _productCode;\r\n    private _productPrice;\r\n    private _awardCollectId;\r\n    private _wheel;\r\n    constructor(wheel: SpinResultsWheel, winCoins: number, totalCoins: number, productId: string, productCode: string, productPrice: number, awardCollectId: string);\r\n    get winCoins(): number;\r\n    set winCoins(value: number);\r\n    get totalCoins(): number;\r\n    set totalCoins(value: number);\r\n    get productId(): string;\r\n    set productId(value: string);\r\n    get productCode(): string;\r\n    set productCode(value: string);\r\n    get productPrice(): number;\r\n    set productPrice(value: number);\r\n    get awardCollectId(): string;\r\n    set awardCollectId(value: string);\r\n    get wheel(): SpinResultsWheel;\r\n    set wheel(value: SpinResultsWheel);\r\n}\r\n"]],0,0,[],[],[]],[[[0,"SpinResultsUpgrade.d","import SpinResultsGame from \"./SpinResultsGame\";\r\nimport { SpinResultsGameStatus } from \"./SpinResultsGameStatus\";\r\nexport default class SpinResultsUpgrade {\r\n    private _level;\r\n    private _award;\r\n    private _vipRatio;\r\n    private _awardCollectId;\r\n    private _maxBet;\r\n    /** 游戏积分 */\r\n    private _points;\r\n    /** 大升级弹窗倒计时 */\r\n    private _countdown;\r\n    /** 解锁的关卡 */\r\n    private _unlockedGames;\r\n    constructor(level: number, award: number, vipRatio: number, awardCollectId: string);\r\n    get level(): number;\r\n    set level(value: number);\r\n    get award(): number;\r\n    set award(value: number);\r\n    get vipRatio(): number;\r\n    set vipRatio(value: number);\r\n    get awardCollectId(): string;\r\n    set awardCollectId(value: string);\r\n    get maxBet(): number;\r\n    set maxBet(value: number);\r\n    /**\r\n     * 获得的游戏积分\r\n     *\r\n     * @readonly\r\n     * @type {number}\r\n     * @memberof SpinResultsUpgrade\r\n     */\r\n    get points(): number;\r\n    set points(value: number);\r\n    /**\r\n     * 大升级弹窗倒计时\r\n     *\r\n     * @readonly\r\n     * @type {number}\r\n     * @memberof SpinResultsUpgrade\r\n     */\r\n    get countdown(): number;\r\n    set countdown(value: number);\r\n    /**\r\n     * 解锁的关卡\r\n     *\r\n     * @readonly\r\n     * @type {SpinResultsGame[]}\r\n     * @memberof SpinResultsUpgrade\r\n     */\r\n    get unlockedGames(): SpinResultsGame[];\r\n    set unlockedGames(value: SpinResultsGame[]);\r\n    /**\r\n     * 添加解锁关卡\r\n     *\r\n     * @param {string} gameId 关卡ID\r\n     * @param {string} gameCode 关卡代号\r\n     * @param {boolean} isFree 是否免费\r\n     * @param {boolean} hasJackpot 是否有奖池\r\n     * @param {string} jackpot 奖池金额\r\n     * @param {string} jackpot2 奖池金额\r\n     * @param {SpinResultsGameStatus} status 关卡状态\r\n     * @param {boolean} isTopGame\r\n     * @param {boolean} isVertical\r\n     * @param {number} orderNum\r\n     * @param {string} version\r\n     * @returns {void}\r\n     * @memberof SpinResultsUpgrade\r\n     */\r\n    addUnlockedGame(gameId: string, gameCode: string, isFree: boolean, hasJackpot: boolean, jackpot: string, jackpot2: string, status: SpinResultsGameStatus, isTopGame: boolean, isVertical: boolean, orderNum: number, version: string): void;\r\n}\r\n"]],0,0,[],[],[]],[[[0,"SpinResultsSymbol.d","export default class SpinResultsSymbol {\r\n    private _code;\r\n    private _assets;\r\n    private _position;\r\n    constructor(code?: number, assets?: number, position?: number);\r\n    /**\r\n     * 获取结果棋子编码\r\n     */\r\n    get code(): number;\r\n    /**\r\n     * 设置结果棋子编码\r\n     *\r\n     */\r\n    set code(value: number);\r\n    /**\r\n     * 获取棋子上的资产（比如金币数、freespin次数）\r\n     */\r\n    get assets(): number;\r\n    /**\r\n     * 设置棋子上的资产（比如金币数、freespin次数）\r\n     */\r\n    set assets(value: number);\r\n    /**\r\n     * 获取棋子位置\r\n     */\r\n    get position(): number;\r\n    /**\r\n     * 设置棋子位置\r\n     */\r\n    set position(value: number);\r\n}\r\n"]],0,0,[],[],[]],[[[0,"SpinResultsSlot.d","import SpinResultsColumn from \"./SpinResultsColumn\";\r\nimport SpinResultsSymbol from \"./SpinResultsSymbol\";\r\nimport SpinResultsEvent from \"./SpinResultsEvent\";\r\nimport { SpinResultsGameMode } from \"./SpinResultsGameMode\";\r\nimport SpinResultsWheel from \"./SpinResultsWheel\";\r\nimport SpinResultsWheelItem from \"./SpinResultsWheeItem\";\r\nexport default class SpinResultsSlot {\r\n    private _columns;\r\n    private _matchedLines;\r\n    private _ofAKind;\r\n    private _events;\r\n    private _extraChesses;\r\n    private _gameMode;\r\n    private _nextGameMode;\r\n    private _wheels;\r\n    private _replaceCodes;\r\n    private _symbolEvents;\r\n    constructor(columns?: SpinResultsColumn[], matchedLines?: number[][], ofAKind?: number);\r\n    /**\r\n     * 获取列结果集\r\n     */\r\n    get columns(): SpinResultsColumn[];\r\n    /**\r\n     * 设置列结果集\r\n     */\r\n    set columns(value: SpinResultsColumn[]);\r\n    /**\r\n     * 获取连线数据\r\n     */\r\n    get matchedLines(): number[][];\r\n    /**\r\n     * 设置连线数据\r\n     */\r\n    set matchedLines(value: number[][]);\r\n    /**\r\n     * 获取5、6、7连\r\n     */\r\n    get ofAKind(): number;\r\n    /**\r\n     * 设置5、6、7连\r\n     */\r\n    set ofAKind(value: number);\r\n    get extraChesses(): SpinResultsSymbol[];\r\n    set extraChesses(value: SpinResultsSymbol[]);\r\n    get events(): SpinResultsEvent[];\r\n    set events(value: SpinResultsEvent[]);\r\n    get gameMode(): SpinResultsGameMode;\r\n    set gameMode(value: SpinResultsGameMode);\r\n    get nextGameMode(): SpinResultsGameMode;\r\n    set nextGameMode(value: SpinResultsGameMode);\r\n    get wheels(): SpinResultsWheel[];\r\n    set wheels(value: SpinResultsWheel[]);\r\n    get replaceCodes(): number[][];\r\n    /**\r\n     * Gets whether has matched lines\r\n     * 是否有连线\r\n     */\r\n    get hasMatchedLines(): boolean;\r\n    get hasReplaceCodes(): boolean;\r\n    private getReplaceCodes;\r\n    /**\r\n     * 更新cell数据\r\n     *\r\n     * @param {number} column 列号\r\n     * @param {number} row 行号\r\n     * @param {number} code 棋子编码\r\n     * @param {number} [assets=0] 资产值\r\n     * @param {boolean} [fixed=false] 是否固定\r\n     * @param {number} [extraCode=-1] 额外棋子编码\r\n     * @param {number} [extraAssets=-1] 额外棋子资产\r\n     * @param {number} [extraPosition=-1] 额外棋子位置\r\n     * @param {SpinResultsWheel} [wheel=null] 转盘数据，比如大章鱼选择框\r\n     * @param {SpinResultsEvent[]} [events=[]] 事件\r\n     * @memberof SpinResults\r\n     */\r\n    updateCell(column: number, row: number, code: number, assets?: number, mockCodes?: number[], fixed?: boolean, extraCode?: number, extraAssets?: number, extraPosition?: number, wheel?: SpinResultsWheel, events?: SpinResultsEvent[]): void;\r\n    /**\r\n     * 更新格子资产\r\n     *\r\n     * @param {number} column 列号\r\n     * @param {number} row 行号\r\n     * @param {number} assets 资产值\r\n     * @memberof SpinResultsSlot\r\n     */\r\n    updateCellAssets(column: number, row: number, assets: number): void;\r\n    /**\r\n     * 更新格子固定标记\r\n     *\r\n     * @param {number} column 列号\r\n     * @param {number} row 行号\r\n     * @param {boolean} fixed 是否固定\r\n     * @memberof SpinResultsSlot\r\n     */\r\n    updateCellFixed(column: number, row: number, fixed: boolean): void;\r\n    /**\r\n     * 更新格子额外棋子相关数据\r\n     *\r\n     * @param {number} column 列号\r\n     * @param {number} row 行号\r\n     * @param {number} extraCode 额外棋子编码\r\n     * @param {number} [extraAssets=-1] 额外棋子资产\r\n     * @param {number} [extraPosition=-1] 额外棋子位置\r\n     * @memberof SpinResultsSlot\r\n     */\r\n    updateCellExtraCode(column: number, row: number, extraCode: number, extraAssets?: number, extraPosition?: number): void;\r\n    /**\r\n     * 更新格子转盘数据\r\n     * - 比如海洋关的大章鱼棋子，让用户选择，结果已经预定，相当于转盘\r\n     *\r\n     * @param {number} column 列号\r\n     * @param {number} row 行号\r\n     * @param {SpinResultsWheel} wheel 转盘数据\r\n     * @memberof SpinResultsSlot\r\n     */\r\n    updateCellWheel(column: number, row: number, values: SpinResultsWheelItem[], finalValue: SpinResultsWheelItem): void;\r\n    /**\r\n     * 更新格子事件\r\n     *\r\n     * @param {number} column 列号\r\n     * @param {number} row 行号\r\n     * @param {SpinResultsEvent[]} events 事件\r\n     * @memberof SpinResultsSlot\r\n     */\r\n    updateCellEvents(column: number, row: number, events: SpinResultsEvent[]): void;\r\n    /**\r\n     * 更新发生变化的棋子的mockCodes值，同时更新code值\r\n     *\r\n     * @param {number[]} hand 更新的手牌数据，变化的棋子位置才有值，没变化的棋子值为-1\r\n     * @param {number} columnSize 列数\r\n     * @param {number} rowSize 行数\r\n     * @memberof SpinResults\r\n     */\r\n    updateChangeCodeMockCodes(hand: number[], columnSize: number, rowSize: number): void;\r\n    /**\r\n     * 更新mockCodes值，同时更新code值\r\n     *\r\n     * @param {number[]} currentHand 当前手牌数据\r\n     * @param {number[]} previousHand 之前的手牌数据\r\n     * @param {number} columnSize 列数\r\n     * @param {number} rowSize 行数\r\n     * @memberof SpinResults\r\n     */\r\n    updateMockCodes(currentHand: number[], previousHand: number[], columnSize: number, rowSize: number): void;\r\n    /**\r\n     * 更新列的isHoldWin\r\n     *\r\n     * @param {number} column 列号\r\n     * @param {boolean} isHoldWin 是否hold win\r\n     * @memberof SpinResults\r\n     */\r\n    updateColumnHoldWin(column: number, isHoldWin: boolean): void;\r\n    /**\r\n     * 更新格子code\r\n     *\r\n     * @param {number[]} hand 手牌数据\r\n     * @param {number} rowSize 棋盘行数\r\n     * @memberof SpinResultsSlot\r\n     */\r\n    updateCells(hand: number[], rowSize: number): void;\r\n    /**\r\n     * 初始化SpinResultSlot\r\n     *\r\n     * @param {number[]} hand 手牌\r\n     * @param {number} columnSize 列数\r\n     * @param {number} rowSize 行数\r\n     * @memberof SpinResultsSlot\r\n     */\r\n    init(hand: number[], columnSize: number, rowSize: number): void;\r\n}\r\n"]],0,0,[],[],[]],[[[0,"SpinResultsRankInfo.d","export default class SpinResultsRankInfo {\r\n    private _userId;\r\n    private _name;\r\n    private _headImageUrl;\r\n    private _headFrameImageUrl;\r\n    private _point;\r\n    private _number;\r\n    constructor(userId: number, name: string, headImageUrl: string, headFrameImageUrl: string, point: number, num: number);\r\n    get userId(): number;\r\n    set userId(value: number);\r\n    get name(): string;\r\n    set name(value: string);\r\n    get headImageUrl(): string;\r\n    set headImageUrl(value: string);\r\n    get headFrameImageUrl(): string;\r\n    set headFrameImageUrl(value: string);\r\n    get point(): number;\r\n    set point(value: number);\r\n    get number(): number;\r\n    set number(value: number);\r\n}\r\n"]],0,0,[],[],[]],[[[0,"SpinResultsWheeItem.d","/**\r\n * 转盘选项\r\n *\r\n * @class SpinResultsWheelItem\r\n */\r\nexport default class SpinResultsWheelItem {\r\n    _value: number;\r\n    _assets: number;\r\n    /**\r\n     * Creates an instance of SpinResultsWheelItem.\r\n     * @param {number} value 值\r\n     * @param {number} assets 资产\r\n     * @memberof SpinResultsWheelItem\r\n     */\r\n    constructor(value: number, assets: number);\r\n    /**\r\n     * 获取值\r\n     *\r\n     * @type {number}\r\n     * @memberof SpinResultsWheelItem\r\n     */\r\n    get value(): number;\r\n    /**\r\n     * 设置值\r\n     *\r\n     * @memberof SpinResultsWheelItem\r\n     */\r\n    set value(value: number);\r\n    /**\r\n     * 获取资产\r\n     *\r\n     * @type {number}\r\n     * @memberof SpinResultsWheelItem\r\n     */\r\n    get assets(): number;\r\n    /**\r\n     * 设置资产\r\n     *\r\n     * @memberof SpinResultsWheelItem\r\n     */\r\n    set assets(value: number);\r\n}\r\n"]],0,0,[],[],[]],[[[0,"SpinResultsCard.d","export default class SpinResultsCard {\r\n    private _id;\r\n    private _imageUrl;\r\n    private _isNew;\r\n    private _count;\r\n    constructor(_id: string, _imageUrl: string, _isNew: boolean, _count: number);\r\n    /**\r\n     * 卡牌ID\r\n     *\r\n     * @readonly\r\n     * @type {string}\r\n     * @memberof SpinResultsCard\r\n     */\r\n    get id(): string;\r\n    set id(value: string);\r\n    /**\r\n     * 卡牌图片地址\r\n     *\r\n     * @readonly\r\n     * @type {string}\r\n     * @memberof SpinResultsCard\r\n     */\r\n    get imageUrl(): string;\r\n    set imageUrl(value: string);\r\n    /**\r\n     * 是否是新出现的卡牌\r\n     *\r\n     * @readonly\r\n     * @type {boolean}\r\n     * @memberof SpinResultsCard\r\n     */\r\n    get isNewCard(): boolean;\r\n    set isNewCard(value: boolean);\r\n    /**\r\n     * 持有数量\r\n     *\r\n     * @readonly\r\n     * @type {number}\r\n     * @memberof SpinResultsCard\r\n     */\r\n    get cardCount(): number;\r\n    set cardCount(value: number);\r\n}\r\n"]],0,0,[],[],[]],[[[0,"SpinResults.d","import { SpinResultsWinType } from \"./SpinResultsWinType\";\r\nimport { SpinResultsGameMode } from \"./SpinResultsGameMode\";\r\nimport SpinResultsSlot from \"./SpinResultsSlot\";\r\nimport SpinResultsFreeTrigger from \"./SpinResultsFreeTrigger\";\r\nimport SpinResultsCollectible from \"./SpinResultsCollectible\";\r\nimport SpinResultsLevel from \"./SpinResultsLevel\";\r\nimport SpinResultsTour from \"./SpinResultsTour\";\r\nimport SpinResultsGameWheel from \"./SpinResultsGameWheel\";\r\nimport SpinResultsBigWinAdAwards from \"./SpinResultsBigWinAdAwards\";\r\nimport SpinResultsCard from \"./SpinResultsCard\";\r\nimport { SpinResultsGameStatus } from \"./SpinResultsGameStatus\";\r\nexport default class SpinResults {\r\n    private _slots;\r\n    private _jackpots;\r\n    private _jackpot;\r\n    private _jackpotLevel;\r\n    private _winType;\r\n    private _winCoins;\r\n    private _userCoins;\r\n    private _previousGameMode;\r\n    private _gameMode;\r\n    private _nextGameMode;\r\n    private _finishedCount;\r\n    private _totalCount;\r\n    private _timestamp;\r\n    private _totalBetNum;\r\n    private _highScore;\r\n    /** 游戏积分 */\r\n    private _points;\r\n    /** 用户总游戏积分 */\r\n    private _userPoints;\r\n    /** BinWin金币数 */\r\n    private _bigWinCoins;\r\n    /** BigWin看广告奖励 */\r\n    private _bigWinAdAwards;\r\n    /** 获取得的卡牌，没有为空数组 */\r\n    private _cards;\r\n    private _freeTrigger;\r\n    private _collectibles;\r\n    private _level;\r\n    private _tour;\r\n    private _gameWheel;\r\n    constructor(slots?: SpinResultsSlot[], jackpots?: number[], jackpot?: number, jackpotLevel?: number, winType?: SpinResultsWinType, winCoins?: number, userCoins?: number, gameMode?: SpinResultsGameMode, finishedCount?: number, totalCount?: number, freeTrigger?: SpinResultsFreeTrigger, collectibles?: SpinResultsCollectible[], timestamp?: number, totalBetNum?: number, level?: SpinResultsLevel, tour?: SpinResultsTour, gameWheel?: SpinResultsGameWheel);\r\n    get slots(): SpinResultsSlot[];\r\n    set slots(value: SpinResultsSlot[]);\r\n    /**\r\n     * 获取奖池数据\r\n     */\r\n    get jackpots(): number[];\r\n    /**\r\n     * 设置奖池数据\r\n     */\r\n    set jackpots(value: number[]);\r\n    /**\r\n     * 获取jp奖励\r\n     */\r\n    get jackpot(): number;\r\n    /**\r\n     * 设置jp奖励\r\n     */\r\n    set jackpot(value: number);\r\n    /**\r\n     * 获取jp中奖档次\r\n     */\r\n    get jackpotLevel(): number;\r\n    /**\r\n     * 设置jp中奖档次\r\n     */\r\n    set jackpotLevel(value: number);\r\n    /**\r\n     * 获取赢的类型\r\n     */\r\n    get winType(): SpinResultsWinType;\r\n    /**\r\n     * 设置赢的类型\r\n     */\r\n    set winType(value: SpinResultsWinType);\r\n    /**\r\n     * 获取赢取金币数\r\n     */\r\n    get winCoins(): number;\r\n    /**\r\n     * 设置赢取金币数\r\n     */\r\n    set winCoins(value: number);\r\n    /**\r\n     * 获取用户金币数\r\n     */\r\n    get userCoins(): number;\r\n    /**\r\n     * 设置用户金币数\r\n     */\r\n    set userCoins(value: number);\r\n    /**\r\n     * 获取游戏类型\r\n     */\r\n    get previousGameMode(): SpinResultsGameMode;\r\n    /**\r\n     * 设置游戏类型\r\n     */\r\n    set previousGameMode(value: SpinResultsGameMode);\r\n    /**\r\n     * 获取游戏类型\r\n     */\r\n    get gameMode(): SpinResultsGameMode;\r\n    /**\r\n     * 设置游戏类型\r\n     */\r\n    set gameMode(value: SpinResultsGameMode);\r\n    /**\r\n     * 获取下回合游戏类型\r\n     */\r\n    get nextGameMode(): SpinResultsGameMode;\r\n    /**\r\n     * 设置下回合游戏类型\r\n     */\r\n    set nextGameMode(value: SpinResultsGameMode);\r\n    /**\r\n     * 获取已完成次数\r\n     */\r\n    get finishedCount(): number;\r\n    /**\r\n     * 设置已完成次数\r\n     */\r\n    set finishedCount(value: number);\r\n    /**\r\n     * 获取总次数\r\n     */\r\n    get totalCount(): number;\r\n    /**\r\n     * 设置总次数\r\n     */\r\n    set totalCount(value: number);\r\n    /**\r\n     * 获取时间戳(ms)\r\n     */\r\n    get timestamp(): number;\r\n    set timestamp(value: number);\r\n    /**\r\n     * 获取下注数\r\n     */\r\n    get totalBetNum(): number;\r\n    /**\r\n     * 设置下注数\r\n     */\r\n    set totalBetNum(value: number);\r\n    /**\r\n     * 获取历史最高分\r\n     */\r\n    get highScore(): number;\r\n    /**\r\n     * 设置历史最高分\r\n     */\r\n    set highScore(value: number);\r\n    /**\r\n     * 游戏积分\r\n     *\r\n     * @readonly\r\n     * @type {number}\r\n     * @memberof SpinResults\r\n     */\r\n    get points(): number;\r\n    set points(value: number);\r\n    /**\r\n     * 用户总游戏积分\r\n     *\r\n     * @readonly\r\n     * @type {number}\r\n     * @memberof SpinResults\r\n     */\r\n    get userPoints(): number;\r\n    set userPoints(value: number);\r\n    /**\r\n     * BigWin金币数\r\n     *\r\n     * @readonly\r\n     * @type {number}\r\n     * @memberof SpinResults\r\n     */\r\n    get bigWinCoins(): number;\r\n    set bigWinCoins(value: number);\r\n    /**\r\n     * 获取免费游戏触发器\r\n     */\r\n    get freeTrigger(): SpinResultsFreeTrigger;\r\n    /**\r\n     * 设置免费游戏触发器\r\n     */\r\n    set freeTrigger(value: SpinResultsFreeTrigger);\r\n    private setNextGameMode;\r\n    /**\r\n     * 获取收集值列表\r\n     */\r\n    get collectibles(): SpinResultsCollectible[];\r\n    /**\r\n     * 设置收集值列表\r\n     */\r\n    set collectibles(value: SpinResultsCollectible[]);\r\n    /**\r\n     * 获取等级\r\n     */\r\n    get level(): SpinResultsLevel;\r\n    /**\r\n     * 设置等级\r\n     */\r\n    set level(value: SpinResultsLevel);\r\n    /**\r\n     * 获取巡回赛数据\r\n     */\r\n    get tour(): SpinResultsTour;\r\n    /**\r\n     * 设置巡回赛\r\n     */\r\n    set tour(value: SpinResultsTour);\r\n    /**\r\n     * 获取游戏内转盘\r\n     */\r\n    get gameWheel(): SpinResultsGameWheel;\r\n    /**\r\n     * 设置游戏内转盘\r\n     */\r\n    set gameWheel(value: SpinResultsGameWheel);\r\n    /**\r\n     * 获得的卡牌\r\n     *\r\n     * @readonly\r\n     * @type {SpinResultsCard[]}\r\n     * @memberof SpinResults\r\n     */\r\n    get cards(): SpinResultsCard[];\r\n    set cards(value: SpinResultsCard[]);\r\n    /**\r\n     * 添加卡牌\r\n     *\r\n     * @param {string} cardId 卡牌ID\r\n     * @param {string} cardImageUrl 卡牌图片地址\r\n     * @memberof SpinResults\r\n     */\r\n    addCard(cardId: string, cardImageUrl: string, isNew?: boolean, count?: number): void;\r\n    /**\r\n     * BinWin看广告奖励\r\n     *\r\n     * @readonly\r\n     * @type {SpinResultsBigWinAdAwards}\r\n     * @memberof SpinResults\r\n     */\r\n    get bigWinAdAwards(): SpinResultsBigWinAdAwards;\r\n    set bigWinAdAwards(value: SpinResultsBigWinAdAwards);\r\n    /**\r\n     * 添加BinWin看广告奖励\r\n     *\r\n     * @param {string} awardId 奖励ID\r\n     * @param {number} points 奖励的游戏积分\r\n     * @param {number} coins 奖励的金币\r\n     * @param {number} countdown 弹窗倒计时\r\n     * @memberof SpinResults\r\n     */\r\n    addBinWinAdAwards(awardId: string, points: number, coins: number, countdown: number): void;\r\n    /**\r\n     * 添加解锁关卡\r\n     *\r\n     * @param {string} gameId 关卡ID\r\n     * @param {string} gameCode 关卡代号\r\n     * @param {boolean} isFree 是否免费\r\n     * @param {boolean} hasJackpot 是否有奖池\r\n     * @param {string} jackpot 奖池金额\r\n     * @param {string} jackpot2 奖池金额\r\n     * @param {SpinResultsGameStatus} status 关卡状态\r\n     * @param {boolean} isTopGame\r\n     * @param {boolean} isVertical\r\n     * @param {number} orderNum\r\n     * @param {string} version\r\n     * @returns {void}\r\n     * @memberof SpinResults\r\n     */\r\n    addUnlockedGame(gameId: string, gameCode: string, isFree: boolean, hasJackpot: boolean, jackpot: string, jackpot2: string, status: SpinResultsGameStatus, isTopGame: boolean, isVertical: boolean, orderNum: number, version: string): void;\r\n}\r\n"]],0,0,[],[],[]],[[[0,"SpinResultsTour.d","import SpinResultsRankInfo from \"./SpinResultsRankInfo\";\r\nexport default class SpinResultsTour {\r\n    private _status;\r\n    private _countdown;\r\n    private _totalMinutes;\r\n    private _award;\r\n    private _mine;\r\n    private _myPrev;\r\n    private _ranks;\r\n    constructor(status: number, countdown: number, totalMinutes: number, award: number[], mine: SpinResultsRankInfo, myPrev: SpinResultsRankInfo, ranks: SpinResultsRankInfo[]);\r\n    get status(): number;\r\n    set status(value: number);\r\n    get countdown(): number;\r\n    set countdown(value: number);\r\n    get totalMinutes(): number;\r\n    set totalMinutes(value: number);\r\n    get award(): number[];\r\n    set award(value: number[]);\r\n    get mine(): SpinResultsRankInfo;\r\n    set mine(value: SpinResultsRankInfo);\r\n    get myPrev(): SpinResultsRankInfo;\r\n    set myPrev(value: SpinResultsRankInfo);\r\n    get ranks(): SpinResultsRankInfo[];\r\n    set ranks(value: SpinResultsRankInfo[]);\r\n}\r\n"]],0,0,[],[],[]],[[[0,"SpinResultsGameStatus.d","/**\r\n * 关卡状态\r\n *\r\n * @export\r\n * @enum {number}\r\n */\r\nexport declare enum SpinResultsGameStatus {\r\n    /**\r\n     * 正常\r\n     */\r\n    Normal = 0,\r\n    /**\r\n     * 未开放\r\n     */\r\n    NotOpen = 1,\r\n    /**\r\n     * 禁用\r\n     */\r\n    Disabled = 2\r\n}\r\n"]],0,0,[],[],[]],[[[0,"index.d","/*\r\n * @Author: 田鑫\r\n * @Date: 2020-04-02 10:54:41\r\n * @LastEditors: 田鑫\r\n * @LastEditTime: 2020-04-20 15:27:03\r\n * @Version: CocosCreator V2.2.2\r\n * @Description:\r\n */\r\n\r\ntype T = Window & typeof globalThis;\r\ninterface Window extends T {\r\n\t[key: string]: any;\r\n}\r\n"]],0,0,[],[],[]],[[[0,"SpinResultsLevel.d","import SpinResultsUpgrade from \"./SpinResultsUpgrade\";\r\nexport default class SpinResultsLevel {\r\n    private _level;\r\n    private _currentValue;\r\n    private _totalValue;\r\n    private _upgrade;\r\n    constructor(level: number, currentValue: number, totalValue: number, upgrade: SpinResultsUpgrade);\r\n    get level(): number;\r\n    set level(value: number);\r\n    get currentValue(): number;\r\n    set currentValue(value: number);\r\n    get totalValue(): number;\r\n    set totalValue(value: number);\r\n    get upgrade(): SpinResultsUpgrade;\r\n    set upgrade(value: SpinResultsUpgrade);\r\n}\r\n"]],0,0,[],[],[]]]]